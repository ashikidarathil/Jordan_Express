<%- include('../partials/user/header') %>

    <!DOCTYPE html>
    <html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Shopping Cart</title>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
            integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2Lw=="
            crossorigin="anonymous" referrerpolicy="no-referrer" />
        <style>
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
                font-family: Arial, sans-serif;
            }

            body {
                background-color: #f5f5f5;
            }

            .container {
                max-width: 1200px;
                margin: 0 auto;
                display: flex;
                justify-content: space-between;
                gap: 20px;
                margin-bottom: 200px;
                margin-top: 100px;
            }

            h1 {
                margin-top: 50px;
                font-size: 24px;
                margin-left: 150px;
            }

            .cart-items,
            .order-summary {
                background-color: #fff;
                border: 1px solid #ddd;
                border-radius: 8px;
                padding: 20px;
            }

            .breadcrumb {
                display: flex;
                list-style: none;
                margin: 10px 0 20px 150px;
                padding: 0;
                margin-top: 20px;
            }

            .breadcrumb li {
                display: inline;
                font-size: 14px;
                font-weight: 600;
            }

            .breadcrumb li+li:before {
                content: ">";
                padding: 0 8px;
                color: #724a22;
                font-weight: 400;
            }

            .breadcrumb a {
                text-decoration: none;
                color: #8b5a2b;
            }

            .breadcrumb a:hover {
                text-decoration: underline;
            }

            .breadcrumb .active {
                color: #555;
                font-weight: 600;
            }


            .cart-items {
                flex: 2;
            }

            .cart-item {
                display: flex;
                align-items: flex-start;
                gap: 15px;
                padding: 15px 0;
                border-bottom: 1px solid #ddd;
            }

            .cart-item img {
                width: 80px;
                height: 80px;
                object-fit: cover;
            }

            .cart-item i {
                padding-bottom: 20px;
                color: #888;
                cursor: pointer;
            }

            .cart-item i:hover {
                color: red;
            }

            .item-details {
                flex: 1;
            }

            .item-details h3 {
                font-size: 16px;
                margin-bottom: 5px;
            }

            .size-container {
                margin-top: 10px;
                padding: 8px;
                border: 1px dashed #eee;
                border-radius: 4px;
                margin-bottom: 8px;
            }

            .size-header {
                display: flex;
                justify-content: space-between;
                margin-bottom: 5px;
            }

            .size-label {
                font-weight: bold;
                color: #555;
            }

            .discount {
                background-color: #ffcc00;
                color: #333;
                padding: 2px 8px;
                border-radius: 12px;
                font-size: 12px;
                margin-left: 10px;
            }

            .price {
                font-size: 14px;
                color: #888;
                text-decoration: line-through;
                margin-right: 10px;
            }

            .discounted-price {
                font-size: 16px;
                font-weight: bold;
                color: red;
            }

            .quantity {
                display: flex;
                align-items: center;
                gap: 10px;
                margin: 10px 0;
            }

            .quantity button {
                width: 30px;
                height: 30px;
                border: 1px solid #ddd;
                background-color: #f5f5f5;
                cursor: pointer;
                font-size: 16px;
            }

            .quantity input {
                width: 40px;
                text-align: center;
                border: 1px solid #ddd;
                padding: 5px;
            }

            .remove {
                color: #888;
                font-size: 14px;
                cursor: pointer;
            }

            .remove-size {
                color: #888;
                cursor: pointer;
                font-size: 12px;
            }

            .remove-size:hover {
                color: red;
            }

            .order-summary {
                flex: 1;
                max-width: 300px;
            }

            .order-summary h2 {
                font-size: 18px;
                margin-bottom: 20px;
            }

            .promo-code {
                display: flex;
                gap: 10px;
                margin-bottom: 20px;
            }

            .promo-code input {
                flex: 1;
                padding: 10px;
                border: 1px solid #ddd;
                border-radius: 4px;
                font-size: 14px;
            }

            .promo-code button {
                padding: 10px 20px;
                background-color: #8b5a2b;
                color: #fff;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                font-size: 14px;
            }

            .summary-details {
                margin-bottom: 20px;
            }

            .summary-details p {
                display: flex;
                justify-content: space-between;
                font-size: 14px;
                margin-bottom: 10px;
            }

            .summary-details p.total {
                font-weight: bold;
                font-size: 16px;
            }

            .checkout-btn {
                width: 100%;
                padding: 15px;
                background-color: #8b5a2b;
                color: #fff;
                border: none;
                border-radius: 4px;
                font-size: 16px;
                cursor: pointer;
                margin-top: 20px;
            }

            .checkout-btn:hover {
                background-color: #724a22;
            }

            .out-of-stock {
                opacity: 0.6;
                pointer-events: none;
            }

            .out-of-stock-label {
                color: red;
                font-size: 12px;
                margin-left: 10px;
            }

            /* Updated Empty Cart Styling */
            .empty-cart {
                text-align: center;
                padding: 50px;
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                min-height: 400px;
            }

            .empty-cart h3 {
                font-size: 24px;
                color: #333;
                margin-bottom: 30px;
            }

            .empty-cart-img {
                width: 300px;
            }

            .empty-cart-icon i {
                font-size: 150px;
                color: #ccc;
            }

            .empty-cart-icon::after {
                content: 'âœ•';
                position: absolute;
                top: -1;
                right: 0;
                background-color: #fff;
                border: 2px solid #ccc;
                border-radius: 50%;
                width: 40px;
                height: 40px;
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 24px;
                color: #ff8c00;
            }

            .return-home-btn {
                padding: 10px 20px;
                background-color: #8b5a2b;
                color: #fff;
                border: none;
                border-radius: 4px;
                font-size: 12px;
                font-weight: 600;
                cursor: pointer;
                transition: background-color 0.3s;
            }

            .return-home-btn:hover {
                background-color: #724a22;
            }

            /* Modal Styles */
            .modal-container {
                display: none;
                position: fixed;
                top: 80px;
                right: 20px;
                z-index: 1000;
                animation: slideIn 0.5s forwards;
            }

            .modal-content {
                background-color: #f8f8f8;
                border-left: 4px solid #8b5a2b;
                font-size: 14px;
                font-weight: 600;
                padding: 15px 20px;
                border-radius: 4px;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
                max-width: 300px;
                border-radius: 20px;
                position: relative;
            }

            .modal-error .modal-content {
                border: none;
                background-color: #ff3333;
                color: white;
            }

            .modal-success .modal-content {
                background-color: #33cc33;
                border: none;
                color: white;
            }

            .modal-close {
                position: absolute;
                top: -2px;
                right: 5px;
                font-size: 20px;
                cursor: pointer;
                color: #888;
            }

            .modal-close:hover {
                color: #333;
            }

            @keyframes slideIn {
                from {
                    transform: translateX(100%);
                    opacity: 0;
                }

                to {
                    transform: translateX(0);
                    opacity: 1;
                }
            }

            @keyframes slideOut {
                from {
                    transform: translateX(0);
                    opacity: 1;
                }

                to {
                    transform: translateX(100%);
                    opacity: 0;
                }
            }

            /* Confirmation Modal Styles */
            .confirmation-modal {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0, 0, 0, 0.5);
                display: flex;
                justify-content: center;
                align-items: center;
                z-index: 1001;
            }

            .confirmation-content {
                background-color: white;
                padding: 20px;
                border-radius: 8px;
                width: 90%;
                max-width: 400px;
                text-align: center;
            }

            .confirmation-buttons {
                margin-top: 20px;
                display: flex;
                justify-content: center;
                gap: 10px;
            }

            .confirmation-buttons button {
                padding: 8px 16px;
                border: none;
                border-radius: 4px;
                cursor: pointer;
            }

            .confirm-yes {
                background-color: #8b5a2b;
                color: white;
            }

            .confirm-no {
                background-color: #ccc;
            }
        </style>
    </head>

    <body>
        <h1>Shopping Cart</h1>
        <ul class="breadcrumb">
            <li><a href="/"><i class="fas fa-home"></i> Home</a></li>
            <li><a href="/shop">Shop</a></li>
            <li class="active">Shopping Cart</li>
        </ul>
        <div class="container">
            <div class="cart-items">
                <% if (cartItems && cartItems.length> 0) { %>
                    <% cartItems.forEach(item=> { %>
                        <div class="cart-item <%= item.productID.status === 'Out of Stock' ? 'out-of-stock' : '' %>"
                            data-item-id="<%= item._id %>">
                            <a href="/productDetails?id=<%= item.productID._id %>">
                                <img src="/uploads/product-image/<%= item.productID.productImage[0] %>" 
                                     alt="<%= item.productID.productName %>" 
                                     style="width: 160px;">
                            </a>
                            
                            <div class="item-details">
                                <h3>
                                    <%= item.productID.productName %>
                                        <% if (item.productID.status==='Out of Stock' ) { %>
                                            <span class="out-of-stock-label">Out of Stock</span>
                                            <% } %>
                                </h3>
                                <p>
                                    <span class="price">$<%= item.productID.regularPrice %></span>
                                    <span class="discounted-price">$<%= item.price %></span>
                                </p>

                                <% item.size.forEach(sizeItem=> { %>
                                    <div class="size-container" data-size="<%= sizeItem.size %>">
                                        <div class="size-header">
                                            <span class="size-label">Size: <%= sizeItem.size %></span>
                                            <i class="fas fa-times remove-size" data-item-id="<%= item._id %>"
                                                data-size="<%= sizeItem.size %>"></i>
                                        </div>
                                        <div class="quantity">
                                            <button class="decrement-btn" <%=sizeItem.quantity <=1 ? 'disabled' : ''
                                                %>>-</button>
                                            <input type="text" value="<%= sizeItem.quantity %>" class="quantity-input"
                                                readonly>
                                            <% let disableIncrement=false; if (item.productID.status==='Out of Stock' )
                                                { disableIncrement=true; } else { const
                                                productSize=item.productID.size.find(s=> s.size === sizeItem.size); if
                                                (!productSize || productSize.quantity <= sizeItem.quantity) {
                                                    disableIncrement=true; } } %>
                                                    <button class="increment-btn" <%=disableIncrement ? 'disabled' : ''
                                                        %>
                                                        data-size="<%= sizeItem.size %>">+</button>
                                        </div>
                                    </div>
                                    <% }); %>
                            </div>
                            <i class="fas fa-trash-alt remove" data-item-id="<%= item._id %>"></i>
                        </div>
                        <% }); %>
                            <% } else { %>
                                <div class="empty-cart">
                                    <h3>Cart is empty</h3>
                                    <img src="/img/delete.png" alt="" class="empty-cart-img">
                                    <button class="return-home-btn">Return to Home</button>
                                </div>
                                <% } %>
            </div>
            <% if (cartItems && cartItems.length> 0) { %>
                <div class="order-summary" style="height: 250px;">
                    <h2>Order Summary</h2>
                    <div class="summary-details">
                        <p><span>Subtotal</span> <span>$<%= subtotal.toFixed(2) %></span></p>
                        <p><span>Shipping</span> <span>$0.00</span></p>
                        <p class="total"><span>Total :</span> <span>$<%= total.toFixed(2) %></span></p>
                    </div>
                    <button class="checkout-btn" id="proceedToCheckout">Proceed to Checkout</button>
                </div>
                <% } %>
        </div>

        <div id="modal-container" class="modal-container">
            <div class="modal-content">
                <p id="modal-message"></p>
            </div>
        </div>

        <script>
            function showModal(message, type = 'info') {
                const modal = document.getElementById('modal-container');
                const modalMessage = document.getElementById('modal-message');
                modalMessage.textContent = message;
                modal.className = 'modal-container';
                if (type === 'error') {
                    modal.classList.add('modal-error');
                } else if (type === 'success') {
                    modal.classList.add('modal-success');
                }
                modal.style.display = 'block';
                setTimeout(() => {
                    hideModal();
                }, 3000);
            }

            function hideModal() {
                const modal = document.getElementById('modal-container');
                modal.style.animation = 'slideOut 0.5s forwards';
                setTimeout(() => {
                    modal.style.display = 'none';
                    modal.style.animation = 'slideIn 0.5s forwards';
                }, 500);
            }

            async function confirmAction(message) {
                return new Promise((resolve) => {
                    const modal = document.createElement('div');
                    modal.className = 'confirmation-modal';
                    modal.innerHTML = `
                    <div class="confirmation-content">
                        <p>${message}</p>
                        <div class="confirmation-buttons">
                            <button class="confirm-yes">Yes</button>
                            <button class="confirm-no">No</button>
                        </div>
                    </div>
                `;
                    document.body.appendChild(modal);
                    modal.querySelector('.confirm-yes').addEventListener('click', () => {
                        document.body.removeChild(modal);
                        resolve(true);
                    });
                    modal.querySelector('.confirm-no').addEventListener('click', () => {
                        document.body.removeChild(modal);
                        resolve(false);
                    });
                });
            }

            document.querySelectorAll('.increment-btn').forEach(btn => {
                btn.addEventListener('click', async function () {
                    const itemId = this.closest('.cart-item').dataset.itemId;
                    const size = this.dataset.size;
                    const quantityInput = this.previousElementSibling;
                    const currentQuantity = parseInt(quantityInput.value);

                    if (currentQuantity >= 5) {
                        showModal('Quantity limit exceeded. Maximum 5 items allowed per size.', 'error');
                        return;
                    }

                    await updateCartItem(itemId, size, currentQuantity + 1);
                });
            });

            document.querySelectorAll('.decrement-btn').forEach(btn => {
                btn.addEventListener('click', async function () {
                    const itemId = this.closest('.cart-item').dataset.itemId;
                    const size = this.closest('.size-container').dataset.size;
                    const quantityInput = this.nextElementSibling;
                    const newQuantity = parseInt(quantityInput.value) - 1;

                    if (newQuantity >= 1) {
                        await updateCartItem(itemId, size, newQuantity);
                    }
                });
            });

            document.querySelectorAll('.remove-size').forEach(btn => {
                btn.addEventListener('click', async function () {
                    const itemId = this.dataset.itemId;
                    const size = this.dataset.size;
                    const confirmed = await confirmAction(`Are you sure you want to remove this size (${size}) from your cart?`);
                    if (confirmed) {
                        await removeSizeFromCart(itemId, size);
                    }
                });
            });

            document.querySelectorAll('.remove').forEach(btn => {
                btn.addEventListener('click', async function () {
                    const itemId = this.dataset.itemId;
                    const confirmed = await confirmAction('Are you sure you want to remove this item from your cart?');
                    if (confirmed) {
                        await removeFromCart(itemId);
                    }
                });
            });

            document.getElementById('proceedToCheckout')?.addEventListener('click', function () {
                const outOfStockItems = document.querySelectorAll('.out-of-stock');
                if (outOfStockItems.length > 0) {
                    showModal('Please remove out of stock items before proceeding to checkout', 'error');
                    return;
                }
                window.location.href = '/checkout';
            });

            document.querySelector('.return-home-btn')?.addEventListener('click', function () {
                window.location.href = '/';
            });

            async function updateCartItem(itemId, sizeValue, newQuantity) {
                try {
                    // Client-side validation first
                    if (newQuantity > 5) {
                        showModal('Quantity limit exceeded. Maximum 5 items allowed per size.', 'error');
                        return;
                    }

                    const response = await fetch('/update-cart-item', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            itemId: itemId,
                            sizeValue: sizeValue,
                            newQuantity: newQuantity
                        })
                    });

                    const data = await response.json();



                    if (data.success) {
                        const itemElement = document.querySelector(`.cart-item[data-item-id="${itemId}"]`);
                        const sizeContainer = itemElement.querySelector(`.size-container[data-size="${sizeValue}"]`);
                        const quantityInput = sizeContainer.querySelector('.quantity-input');

                        quantityInput.value = newQuantity;

                        // Update summary
                        document.querySelector('.summary-details p:nth-child(1) span:last-child').textContent = `$${data.subtotal.toFixed(2)}`;
                        document.querySelector('.summary-details p.total span:last-child').textContent = `$${data.total.toFixed(2)}`;

                        // Update button states
                        const decrementBtn = sizeContainer.querySelector('.decrement-btn');
                        const incrementBtn = sizeContainer.querySelector('.increment-btn');


                        if (data.isOutOfStock) {
                            itemElement.classList.add('out-of-stock');
                            const h3 = itemElement.querySelector('h3');
                            if (!h3.querySelector('.out-of-stock-label')) {
                                h3.insertAdjacentHTML('beforeend', '<span class="out-of-stock-label">Out of Stock</span>');
                            }
                            incrementBtn.disabled = true;
                            showModal('This item is now out of stock', 'error');
                        } else if (data.maxQuantityReached) {
                            incrementBtn.disabled = true;

                            showModal('Maximum available quantity reached', 'info');

                        } else {
                            showModal('Quantity updated', 'success');
                        }
                    } else {
                        showModal(data.message || 'Failed to update quantity', 'error');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    showModal('Failed to update quantity', 'error');
                }
            }
            async function removeSizeFromCart(itemId, sizeValue) {
                try {
                    const confirmed = await confirmAction(`Are you sure you want to remove this size (${sizeValue}) from your cart?`);
                    if (!confirmed) return;

                    const response = await fetch('/remove-size-from-cart', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            itemId: itemId,
                            sizeValue: sizeValue
                        })
                    });

                    const data = await response.json();

                    if (data.success) {
                        showModal('Size removed from cart', 'success');
                        // Wait for 1.5 seconds before reloading to show the message
                        setTimeout(() => {
                            window.location.reload();
                        }, 500);
                    } else {
                        showModal(data.message || 'Failed to remove size', 'error');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    showModal('Failed to remove size', 'error');
                }
            }
            async function removeFromCart(itemId) {
                try {
                    const confirmed = await confirmAction('Are you sure you want to remove this item from your cart?');
                    if (!confirmed) return;

                    const response = await fetch('/remove-from-cart', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            itemId: itemId
                        })
                    });

                    const data = await response.json();

                    if (data.success) {
                        showModal('Item removed from cart', 'success');
                        // Wait for 1.5 seconds before reloading to show the message
                        setTimeout(() => {
                            window.location.reload();
                        }, 500);
                    } else {
                        showModal(data.message || 'Failed to remove item', 'error');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    showModal('Failed to remove item', 'error');
                }
            }

        </script>
    </body>

    </html>

    <%- include('../partials/user/footer') %>