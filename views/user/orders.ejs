<%- include('../partials/user/dasboard') %>

  <!DOCTYPE html>
  <html lang="en">

  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Orders | Jordan Express</title>
    <style>
      body {
        background-color: #f5f5f5;
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
      }

      .container {
        max-width: 1200px;
        margin: 20px auto;
        padding: 20px;
      }

      h1 {
        font-size: 24px;
        margin-bottom: 20px;
        color: #333;
      }

      .search {
        margin-bottom: 20px;
        display: flex;
        gap: 10px;
      }

      .search input {
        padding: 10px 15px;
        width: 300px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 14px;
      }

      .search-btn {
        padding: 10px 13px;
        background-color: #3498db;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
      }

      .search-btn:hover {
        background-color: #2980b9;
      }

      table {
        width: 100%;
        border-collapse: collapse;
        background-color: #fff;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
      }

      th,
      td {
        padding: 15px;
        text-align: left;
        border-bottom: 1px solid #eee;
      }

      th {
        background-color: #f9f9f9;
        font-weight: 600;
        color: #555;
      }

      .order-item {
        display: flex;
        align-items: center;
        gap: 15px;
      }

      .order-item img {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: 4px;
        border: 1px solid #eee;
      }

      .order-item-info {
        display: flex;
        flex-direction: column;
      }

      .order-item-name {
        font-weight: 600;
        margin-bottom: 5px;
      }

      .order-item-id {
        font-size: 12px;
        color: #777;
      }

      .btn {
        padding: 8px 16px;
        background-color: #8b5a2b;
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 13px;
        transition: all 0.3s ease;
      }

      .btn:hover {
        background-color: #724a22;
        transform: translateY(-1px);
      }

      .btn-outline {
        background: transparent;
        border: 1px solid #3498db;
        color: #3498db;
      }

      .btn-outline:hover {
        background-color: #3498db;
        color: white;
      }

      .status {
        padding: 5px 10px;
        border-radius: 4px;
        font-size: 12px;
        font-weight: 600;
        text-transform: capitalize;
      }

      .status-pending {
        background-color: #fff3cd;
        color: #856404;
      }

      .status-shipped {
        background-color: #d4edda;
        color: #155724;
      }

      .status-delivered {
        background-color: #d4edda;
        color: #155724;
      }

      .status-cancelled {
        background-color: #f8d7da;
        color: #721c24;
      }

      .status-returned {
        background-color: #138496;
        color: white;
      }

      .status-return-request {
        background-color: #ffccbc;
        color: #d84315;
      }

      .status-return-rejected {
        background-color: #e0e0e0;
        color: red;
      }

      .no-orders {
        text-align: center;
        padding: 40px;
        color: #777;
      }

      .no-orders img {
        width: 100px;
        opacity: 0.5;
        margin-bottom: 20px;
      }

      .pagination {
        display: flex;
        justify-content: center;
        margin-top: 30px;
        gap: 5px;
      }

      .pagination a,
      .pagination span {
        padding: 8px 16px;
        border: 1px solid #ddd;
        text-decoration: none;
        color: #333;
        border-radius: 4px;
        transition: all 0.3s;
      }

      .pagination a:hover {
        background-color: #f5f5f5;
      }

      .pagination .current {
        background-color: #3498db;
        color: white;
      }

      .pagination .disabled {
        color: #aaa;
        pointer-events: none;
        border-color: #eee;
      }

      .payment-method {
        font-size: 12px;
        color: #555;
        text-transform: capitalize;
      }

      .pagination .ellipsis {
        padding: 8px 16px;
        color: #aaa;
        border: none;
        pointer-events: none;
      }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  </head>

  <body>
    <div class="container">
      <h1>My Orders</h1>
      <div class="search">
        <input type="text" id="searchInput" placeholder="Search by Order ID or Product Name"
          value="<%= searchQuery || '' %>">
        <button class="search-btn" onclick="searchOrders()">Search</button>
      </div>
      <table id="orderTable">
        <thead>
          <tr>
            <th>Item</th>
            <th>Date</th>
            <th>Payment Method</th>
            <th>Status</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <% if (orders.length===0) { %>
            <tr>
              <td colspan="5" class="no-orders">
                <img src="/images/empty-order.png" alt="No orders">
                <p>You haven't placed any orders yet.</p>
              </td>
            </tr>
            <% } else { %>
              <% orders.forEach(order=> { %>
                <% order.orderItems.forEach(item=> { %>
                  <tr>
                    <td>
                      <div class="order-item">
                        <% if (item.product?.productImage) { %>
                          <img src="/Uploads/product-image/<%= item.product.productImage[0] %>"
                            alt="<%= item.product.productName %>" style="width: 130px;">
                          <% } else { %>
                            <img src="/images/default-product.jpg" alt="Product image">
                            <% } %>
                              <div class="order-item-info">
                                <span class="order-item-name">
                                  <%= item.product?.productName || 'Product' %>
                                </span>
                                <span class="order-item-id">Order #<%= order.orderID %></span>
                                <span style="font-size: 12px; color: #777;">Size: <%= item.size %></span>
                              </div>
                      </div>
                    </td>
                    <td>
                      <%= order.createdOn.toLocaleDateString('en-US', { year: 'numeric' , month: 'short' ,
                        day: 'numeric' }) %>
                    </td>
                    <td>
                      <span class="payment-method" style="font-size: 16px;">
                        <%= order.paymentMethod %>
                          <% if (order.paymentMethod==='Wallet' ) { %>
                            (₹<%= order.walletAmount %>)
                              <% } %>
                      </span>
                    </td>
                    <td>
                      <span class="status status-<%= item.status.toLowerCase().replace(' ', '-') %>">
                        <%= item.status %>
                      </span>
                    </td>
                    <td>
                      <button class="btn btn-outline"
                        onclick="window.location.href='/order-details/<%= order.orderID %>'">
                        Details
                      </button>
                    </td>
                  </tr>
                  <% }) %>
                    <% }) %>
                      <% } %>
        </tbody>
      </table>
      <div class="pagination">
        <!-- Previous Page Link -->
        <% if (currentPage> 1) { %>
          <a href="?page=<%= currentPage - 1 %>&search=<%= searchQuery || '' %>">«</a>
          <% } else { %>
            <span class="disabled">«</span>
            <% } %>

              <!-- First Page -->
              <% if (totalPages> 1) { %>
                <% if (currentPage===1) { %>
                  <span class="current">1</span>
                  <% } else { %>
                    <a href="?page=1&search=<%= searchQuery || '' %>">1</a>
                    <% } %>
                      <% } %>

                        <!-- Ellipsis after first page if needed -->
                        <% if (totalPages> 4 && currentPage > 3) { %>
                          <span class="ellipsis">...</span>
                          <% } %>

                            <!-- Middle Pages (current page and neighbors) -->
                            <% const startPage=Math.max(2, currentPage - 1); const endPage=Math.min(totalPages - 1,
                              currentPage + 1); for (let i=startPage; i <=endPage; i++) { %>
                              <% if (i===currentPage) { %>
                                <span class="current">
                                  <%= i %>
                                </span>
                                <% } else { %>
                                  <a href="?page=<%= i %>&search=<%= searchQuery || '' %>">
                                    <%= i %>
                                  </a>
                                  <% } %>
                                    <% } %>

                                      <!-- Ellipsis before last page if needed -->
                                      <% if (totalPages> 5 && currentPage < totalPages - 2) { %>
                                          <span class="ellipsis">...</span>
                                          <% } %>

                                            <!-- Last Page -->
                                            <% if (totalPages> 1 && totalPages !== currentPage) { %>
                                              <a href="?page=<%= totalPages %>&search=<%= searchQuery || '' %>">
                                                <%= totalPages %>
                                              </a>
                                              <% } else if (totalPages===currentPage && totalPages> 1) { %>
                                                <span class="current">
                                                  <%= totalPages %>
                                                </span>
                                                <% } %>

                                                  <!-- Next Page Link -->
                                                  <% if (currentPage < totalPages) { %>
                                                    <a
                                                      href="?page=<%= currentPage + 1 %>&search=<%= searchQuery || '' %>">»</a>
                                                    <% } else { %>
                                                      <span class="disabled">»</span>
                                                      <% } %>
      </div>
    </div>
    </div>
    <script>
      function searchOrders() {
        const searchInput = document.getElementById('searchInput').value.trim();
        // Redirect to the same page with the search query
        window.location.href = `/orders?page=1&search=${encodeURIComponent(searchInput)}`;
      }

      // Make search work on Enter key
      document.getElementById('searchInput').addEventListener('keyup', function (e) {
        if (e.key === 'Enter') {
          searchOrders();
        }
      });

      async function cancelOrder(orderId) {
        const { value: reason } = await Swal.fire({
          title: 'Cancel Order',
          input: 'textarea',
          inputLabel: 'Reason for cancellation (optional):',
          inputPlaceholder: 'Let us know why you\'re cancelling...',
          showCancelButton: true,
          confirmButtonColor: '#3498db',
          cancelButtonColor: '#6c757d',
        });

        if (reason === undefined) return; // User clicked cancel

        try {
          const response = await fetch(`/cancel-order/${orderId}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ reason })
          });
          const data = await response.json();

          if (data.success) {
            await Swal.fire({
              title: 'Success!',
              text: 'Your order has been cancelled.',
              icon: 'success',
              confirmButtonColor: '#3498db'
            });
            window.location.reload();
          } else {
            throw new Error(data.message || 'Failed to cancel order');
          }
        } catch (error) {
          Swal.fire({
            title: 'Error',
            text: error.message,
            icon: 'error',
            confirmButtonColor: '#3498db'
          });
        }
      }

      async function returnOrder(orderId) {
        const { value: reason } = await Swal.fire({
          title: 'Return Order',
          input: 'textarea',
          inputLabel: 'Reason for return (required):',
          inputPlaceholder: 'Please tell us why you\'re returning this order...',
          inputValidator: (value) => {
            if (!value) {
              return 'You need to provide a reason for return!';
            }
          },
          showCancelButton: true,
          confirmButtonColor: '#3498db',
        });

        if (!reason) return; // User clicked cancel or didn't provide reason

        try {
          const response = await fetch(`/return-order/${orderId}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ reason })
          });
          const data = await response.json();

          if (data.success) {
            await Swal.fire({
              title: 'Success!',
              text: 'Your return request has been submitted.',
              icon: 'success',
              confirmButtonColor: '#3498db'
            });
            window.location.reload();
          } else {
            throw new Error(data.message || 'Failed to process return');
          }
        } catch (error) {
          Swal.fire({
            title: 'Error',
            text: error.message,
            icon: 'error',
            confirmButtonColor: '#8b5a2b'
          });
        }
      }
    </script>
  </body>

  </html>