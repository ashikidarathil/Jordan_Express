<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<style>
  * {
    font-family: 'Inter', sans-serif;

  }

  .login_wrap {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background-color: #f8f9fa;
  }

  .card-login {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 20px;
    border: 1px solid #ddd;
    border-radius: 10px;
    background-color: #f9f9f9;
    width: 100%;
    max-width: 400px;
    margin: 0 auto;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
  }

  .card-body {
    width: 100%;
  }

  .card-title {
    font-size: 1.5rem;
    font-weight: bold;
    margin-bottom: 1.5rem;
    text-align: center;
  }

  .form-group {
    width: 100%;
    text-align: center;
    position: relative;
    margin-bottom: 1.5rem;
  }

  .form-control {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #ddd;
    border-radius: 5px;
    font-size: 1rem;
  }

  .form-control.is-invalid {
    border-color: #dc3545;
  }

  .error-message {
    color: #dc3545;
    font-size: 0.875rem;
    position: absolute;
    bottom: -20px;
    left: 0;
    text-align: left;
  }

  .btn-primary {
    width: 100%;
    padding: 0.75rem;
    background-color: #007bff;
    border: none;
    border-radius: 5px;
    font-size: 1rem;
    color: white;
    cursor: pointer;
    margin-top: 15px;
  }

  .btn-primary:hover {
    background-color: #0056b3;
  }

  .alert {
    margin-top: 15px;
    padding: 10px;
    border-radius: 5px;
    text-align: center;
  }

  .alert-danger {
    background-color: #f8d7da;
    border-color: #f5c6cb;
    color: #721c24;
  }

  .text-center {
    text-align: center;
  }

  .text-center a {
    color: #007bff;
    text-decoration: none;
  }

  .text-center a:hover {
    text-decoration: underline;
  }
</style>

<section class="login_wrap mt-80 mb-80">
  <div class="card-login">
    <div class="card-body">
      <h4 class="card-title">Change Password</h4>
      <form method="POST" action="/reset-password" id="passwordResetForm">
        <div class="form-group">
          <input class="form-control" name="newPass1" id="newPass1" placeholder="Enter new password" type="password">
          <div id="newPass1Error" class="error-message"></div>
        </div>
        <div class="form-group">
          <input class="form-control" name="newPass2" id="newPass2" placeholder="Re-enter new password" type="password">
          <div id="newPass2Error" class="error-message"></div>
        </div>
        <div class="form-group">
          <button type="submit" class="btn btn-primary">Change Password</button>

          <p class="text-center mt-4">Don't have an account? <a href="/signup">Sign up</a></p>
        </div>
    </div>
</section>



<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  function validateForm(event) {
    event.preventDefault();
    let valid = true;
    const newPass1 = document.getElementById('newPass1');
    const newPass2 = document.getElementById('newPass2');
    const newPass1Error = document.getElementById('newPass1Error');
    const newPass2Error = document.getElementById('newPass2Error');

    newPass1Error.textContent = '';
    newPass2Error.textContent = '';

    if (!newPass1.value.trim()) {
      newPass1Error.textContent = 'Password cannot be empty.';
      newPass1.classList.add('is-invalid');
      valid = false;
    } else if (newPass1.value.length < 6) {
      newPass1Error.textContent = 'Password must be at least 6 characters long.';
      newPass1.classList.add('is-invalid');
      valid = false;
    } else {
      newPass1.classList.remove('is-invalid');
    }

    if (!newPass2.value.trim()) {
      newPass2Error.textContent = 'Please re-enter your password.';
      newPass2.classList.add('is-invalid');
      valid = false;
    } else if (newPass2.value !== newPass1.value) {
      newPass2Error.textContent = 'Passwords do not match.';
      newPass2.classList.add('is-invalid');
      valid = false;
    } else {
      newPass2.classList.remove('is-invalid');
    }

    if (valid) {
      fetch('/reset-password', {
        method: 'POST',
        body: JSON.stringify({
          newPass1: newPass1.value,
          newPass2: newPass2.value
        }),
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        }
      })
        .then(response => {
          if (!response.ok) {
            return response.json().then(err => {
              throw new Error(err.message || `HTTP error! Status: ${response.status}`);
            });
          }
          return response.json();
        })
        .then(data => {
          if (data.success) {
            Swal.fire({
              icon: 'success',
              title: 'Password Changed!',
              text: data.message || 'Your password has been successfully updated.',
              confirmButtonText: 'Back'
            }).then(() => {
              window.location.href = '/edit-profile';
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: data.message || 'Failed to change password'
            });
          }
        })
        .catch(error => {
          console.error('Fetch error:', error);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message
          });
        });
    }
  }

  document.getElementById('passwordResetForm').addEventListener('submit', validateForm);
</script>